name: MyDeck Build/Release Desktop App

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./packages/desktop

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        # include:
        #   - os: macos-latest
        #     artifact\_name: MyDeck\_1.0.1\MacOS.dmg
        #     asset\_name: MyDeck\_1.0.1\MacOS.dmg
        #   - os: ubuntu-latest
        #     artifact\_name: MyDeck\_1.0.1\_amd64.deb
        #     asset\_name: MyDeck\_1.0.1\_amd64.deb
        #   - os: windows-latest
        #     artifact\_name: "MyDeck Setup 1.0.1.exe"
        #     asset\_name: "MyDeck Setup 1.0.1.exe"


    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10
      
      - run: npm install
      - run: npm release
      
      # - name: Upload Release Assets
      #   uses: svenstaro/upload-release-action@v1-release
      #   env:
      #     GITHUB\_TOKEN: ${{ secrets.GITHUB\_TOKEN }}
      #   with:
      #     repo\_token: ${{ secrets.GITHUB\_TOKEN }}
      #     file: "./electron/dist/${{ matrix.artifact\_name }}"
      #     asset\_name: ${{ matrix.asset\_name }}
      #     tag: ${{ github.ref }}
      #     overwrite: true

      # - name: Build/release Electron app
      #   uses: samuelmeuli/action-electron-builder@v1
      #   with:
      #     # GitHub token, automatically provided to the action
      #     # (No need to define this secret in the repo settings)
      #     github_token: ${{ secrets.github_token }}

      #     # If the commit is tagged with a version (e.g. "v1.0.0"),
      #     # release the app after building
      #     release: ${{ startsWith(github.ref, 'refs/tags/v') }}